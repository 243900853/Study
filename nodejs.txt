=======================================学习=======================================
npm和cnpm区别：npm是从国外下载包，cnpm是从淘宝下载包，不过cnpm需要通过npm下载镜像
npm install -g cnpm --registry=https://registry.npm.taobao.org

vue-cli脚手架可以快速构建vue项目

npm install -g --save --dev vue-cli
-g：将包下载到全局环境里面，没加-g则是将包下载到本地，全局环境一般是nodejs的安装路径下，本地一般安装在C:\Users\Administrator下
--save：安装包加入到生产环境
--dev：安装包加入到开发和生产环境
install：可以简化为i

查看node版本：node -v
查看npm版本：npm -v
查询cnpm版本：cnpm -v
查看vue-cli版本：vue -V

查看包的全局安装位置：npm root -g

完成配置文件的初始化：npm init -f

创建vue-cli项目
1、vue init webpack projectName
webpack：创建vue-cli项目的时候有很多个模板，使用频率最高的就是webpack来作为模板选项，还有其他不同的模板。
projectName：工程名字不能有大写字母
2、Install vue-router是否安装vue-router
选择y
3、Use ESLint to lint your code是否安装ESLint管理代码
ESLint是代码风格管理工具，是用来统一代码风格的，一般项目中用。
4、其余的都选择默认

=======================================项目=======================================

C:\SoftWare\nodejs\node_global\node_modules\nrm\cli.js


npm link操作方法

每次要打包
1.在vue-frame-crm控制台中 npm run build
2.vue-frame-crm		npm link
3.在sa-order-web控制台中 npm link vue-frame-crm
4.sa-order-web		ipu dev -p 8080

每次不用打包
sa-order-web中routes.js里面将 import { views } from 'vue-frame-crm' 改为 import { views } from 'vue-frame-crm/src'
每次只用运行ipu dev -p 8080就行


打包发布：
1，打包  npm run build 
2. package.json 改版本号 version
3. 在命令行里登录npm账号 npm login
 samhong
 Hong@410g
 466064010@qq.com
4. npm publish
https://www.npmjs.com/package/vue-frame-crm


（1）不用做登录校验
首先, 在你需要忽略登录的路由定义对象上加上 meta 属性，例如：

const routes = [{
  name: '登录',
  path: '/login',
  component: login,
  meta: { breadName: '登录', title: '登录中国邮政CRM', noLogin: true }
}, {
  name: '忘记密码',
  path: '/fogetpassword',
  component: forgetPass,
  meta: { breadName: '忘记密码', title: '忘记密码' , noLogin: true }
}
]

然后在全局路由钩子函数中根据这个 noLogin 属性做控制，例如：

router.beforeEach((to, from, next) => {
  // ... ...
  if (!to.meta.noLogin && router.app.$store.state.login.success === false) {
    router.push({ path: '/login' }) // 需要登录并且未登录则跳转到登录视图
  } else {
    next() // 其他情况继续渲染视图
  }
})
路由全局钩子应该已经在 router.js 里定义了，自己找找

（2）在http.js里面
/**
 * 请求拦截器
 * @param config
 * @returns {*}
 */
function requestInterceptor(config) {
    // 添加请求拦截器实现逻辑...
    // 请求计数器加一
    http.reqNum = http.reqNum + 1


    // 若是有做鉴权token , 就给头部带上token
    let token = storage.get('cmi-token')
    let lang = storage.get('aid-language')
    if (token) {
        config.headers.Authorization = token
    }else if(window.location.href.indexOf('register')>-1 || window.location.href.indexOf('forgot-password')>-1
        || window.location.href.indexOf('cmi-confirm')>-1){
      config.headers.Authorization = token
    } else {
        // 未登录跳转到登录页面
        router.replace('/', () => {
            // onComplete
            TMessage.warning(lang === 'zh-cn' ? '请登录后访问...' : 'login first', 2)
        }, () => {
            // onAbort
        })
    }
    if (config.url.indexOf('auth') === -1) {
        loadingInstance.start()
    }
    // let userAgent = navigator.userAgent.toLowerCase();
    // console.info(userAgent)
    // if(userAgent.match(/msie ([\d.]+)/)){
    config.url = config.url + (config.url.indexOf('?') != -1 ? '&t=' : '?t=') + Math.random()
    // }

    // TMessage.info('axios 请求开始...')
    // TGlobalLoading.start()
    // loadingInstance.start()
    return config
}